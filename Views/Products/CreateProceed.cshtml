@model Trendyol_Integration.ViewModels.CreateProceedProductModel
@{
    ViewBag.Title = "CreateProceed";
    Layout = "~/Views/Shared/_Layout.cshtml";
}





@using (Html.BeginForm("CreateProceed", "Products", FormMethod.Post))
{
    
    <div class="form-horizontal m-5">
        <h1 class="h3 mb-2 m5 text-gray-800">Ürün Oluştur</h1>
        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            <div class="alert alert-danger" role="alert">@ViewBag.Error</div>
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="card shadow mb-4 col-md-8 p-0">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Ürün Genel Özellikleri</h6>
            </div>
            <div class="card-body">
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.Barcode)
                    @Html.EditorFor(model => model.Product.Barcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Barcode, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.Title)
                    @Html.EditorFor(model => model.Product.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Title, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.ProductMainId)
                    @Html.EditorFor(model => model.Product.ProductMainId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.ProductMainId, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.StockCode)
                    @Html.EditorFor(model => model.Product.StockCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.StockCode, "", new { @class = "text-danger" })
                </div>
                @Html.HiddenFor(model => model.Product.BrandId, new { @class = "brandid-input" })
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.BrandName)
                    <div class="dropdown">
                        @Html.EditorFor(model => model.Product.BrandName, new { htmlAttributes = new { @class = "form-control brandname-input dropdown-toggle", id = "brandname-input", data_bs_toogle = "dropdown", aria_haspopup = "true", aria_expanded = "false", autocomplete = "off" } })
                        <div class=" search-results">
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.Product.BrandName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="card shadow mb-4 col-md-8 p-0">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Ürün Nicelikleri</h6>
            </div>
            <div class="card-body">
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.Quantity)
                    @Html.EditorFor(model => model.Product.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.Quantity, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.DimensionalWeight)
                    @Html.EditorFor(model => model.Product.DimensionalWeight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.DimensionalWeight, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.ListPrice)
                    @Html.EditorFor(model => model.Product.ListPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.ListPrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.SalePrice)
                    @Html.EditorFor(model => model.Product.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.SalePrice, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.VatRate)
                    @Html.EditorFor(model => model.Product.VatRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Product.VatRate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="card shadow mb-4 col-md-8 p-0">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Ürün Resimleri</h6>
            </div>
            <div class="card-body">
                @for (int i = 0; i < 2; i++)
                {
                    <div class="form-group col-md-8">
                        @Html.HiddenFor(model => model.images[i].ImageId, new { Value = 1 })
                        @Html.LabelFor(model => model.images[i].ImageUrl)
                        @Html.EditorFor(model => model.images[i].ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                }
            </div>
        </div>
        <div class="card shadow mb-4 border-left-primary col-md-8 p-0">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Kategori Özellikleri</h6>
            </div>
            <div class="card-body">
                <p><span class="font-weight-bolder text-primary">Mavi ve kalın</span> yazılan özelliklerin girilmesi zorunludur.</p>
                @for (int i = 0; i < Model.Attributes.Count; i++)
                {
                    <div class="form-group col-md-8 ">
                        @if (Model.Attributes[i].AllowCustom)
                        {
                            @Html.LabelFor(model => model.Attributes[i].SelectedValue, Model.Attributes[i].Name, new { @class = (Model.Attributes[i].Required ? "font-weight-bold text-primary" : "") })
                            @Html.EditorFor(model => model.Attributes[i].SelectedValue, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.Attributes[i].SelectedId, new { Value = 1 })
                            @Html.ValidationMessageFor(model => model.Attributes[i].Required, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.LabelFor(model => model.Attributes[i].SelectedId, Model.Attributes[i].Name, new { @class = (Model.Attributes[i].Required ? "font-weight-bold  text-primary" : "") })
                            @Html.DropDownListFor(model => model.Attributes[i].SelectedId, new SelectList(Model.Attributes[i].Values, "Id", "Value", 0).Append(new SelectListItem { Text = "Please select", Value = "0", Selected = true }), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Attributes[i].Required, "", new { @class = "text-danger" })
                        }
                        @Html.HiddenFor(model => model.Attributes[i].Required, new { Value = Model.Attributes[i].Required })
                        @Html.HiddenFor(model => model.Attributes[i].Id, new { Value = Model.Attributes[i].Id })
                        @Html.HiddenFor(model => model.Attributes[i].AllowCustom, new { Value = Model.Attributes[i].AllowCustom })
                        @Html.HiddenFor(model => model.Attributes[i].Name, new { Value = Model.Attributes[i].Name })
                    </div>
                 }
            </div>
        </div>
        <div class="card shadow mb-4 col-md-8 p-0">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Basic Card Example</h6>
            </div>
            <div class="card-body">
                <div class="form-group col-md-8">
                    @Html.LabelFor(model => model.Product.Description)
                    @Html.TextAreaFor(model => model.Product.Description, 5, 100, new { @class = "form-control", style = "resize:none" })
                    @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.Product.Category.CategoryId, new { Value = Model.CategoryId })
        @Html.HiddenFor(model => model.CategoryId, new { Value = Model.CategoryId })
        @Html.HiddenFor(model => model.Product.CargoCompanyId, new { Value = Model.CargoCompanyId })
        @Html.HiddenFor(model => model.CargoCompanyId, new { Value = Model.CargoCompanyId })
        <div class="form-group mt-5">
            <div class="col-md-8 pl-0">
                <input type="submit" value="Oluştur" class="btn btn-primary btn-block" />
            </div>
        </div>
        <div class="col-md-5 pl-0">
            @Html.ActionLink("Geri Dön", "Create")
        </div>
    </div>
}
